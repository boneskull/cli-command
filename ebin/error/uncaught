#!/usr/bin/env node

/**
 *  Example program to test uncaught exception handling.
 *
 *  If your program registers an uncaughtException listener
 *  before creating the program then EUNCAUGHT is not emitted
 *  by the program and you must handle that error scenario.
 *
 *  ./bin/error/uncaught
 *  ./bin/error/uncaught -n NaN
 */
var path = require('path'), cli;
require('ttycolor')().defaults();
var pkg = path.normalize(
  path.join(__dirname, '..', '..', 'package.json'));
process.on('uncaughtException', function(e) {
  // indicate our listener fired
  console.error(cli.name() + ': %s (%s)', e.message, 'custom listener');
  // raise the error via the program for the default behaviour
  // which fires an error event that is captured by the
  // default error listener (middleware.error) and passed
  // to program.error() so that the error is printed
  cli.raise(e);
})
cli = require('../..')(pkg, 'error/uncaught');
cli
  .configure({trace: true})
  .on('etype', function(e, errors) {
    //console.log(e.key);
    console.error(this.name() + ': %s',
      'only executes with invalid -n option');
    // this prints the default message for the error
    this.error(e, errors);
  })
  .option('-n, --number [n]', 'a numeric value', Number)
  .version()
  .help()
  .on('complete', function(req) {
    throw new Error('an uncaught exception');
  })
  .parse();
