#!/usr/bin/env node

/**
 *  Example program to test custom error handling.
 *
 *  This handler just traps the EUNCAUGHT error and
 *  omits the stack trace, all other error codes are
 *  passed through to the default error handler.
 *
 *  ./bin/error/custom
 */
var path = require('path');
require('ttycolor')().defaults();
var pkg = path.normalize(path.join(__dirname, '..', '..', 'package.json'));
var cli = require('../..')(pkg, 'error/custom');
cli
  //.error(function(code, codes, msg, parameters, data) {
    //if(code == codes.EUNCAUGHT) {
      //console.error(this._name + ' %s', data[0].message);
      //process.exit(code);
    //}
  //})
  .on('exception', function(code, codes, msg, parameters, data) {
    //console.dir(this);
    console.log('exception called..%s', this);
    //console.dir(this.exception);
    //return true;
    //if(code == codes.EUNCAUGHT) {
      //console.error(this._name + ' %s', data[0].message);
      //process.exit(code);
    //}
    this.exception(code, codes, null, data);
  })
  .version()
  .help()
  .parse();
throw new Error('a custom error message');
