#!/usr/bin/env node

/**
 *  Example program to test custom help output.
 *
 *  ./bin/help/custom
 *  ./bin/help/custom -h
 *  ./bin/help/custom --help
 *  ./bin/help/custom --help --no-color
 */
var path = require('path');
var pkg = path.normalize(
  path.join(__dirname, '..', '..', 'package.json'));
var cli = require('../..'), help = cli.help;
cli(pkg, 'help/custom')
  .use(cli.middleware.color)
  .version()
  .description('Test program for custom help')
  .help(function(req, next) {
    var repeat = help.repeat;
    var delimiter = repeat(76, '+')
    var usage = help.usage;
    var pkg = this.package();
    help.foot = function() {
      console.log();
      console.log(repeat() + delimiter);
      console.log();
      console.log(repeat() + 'Author: ' + pkg.author);
      console.log(repeat() + 'Repository: '
        + pkg.repository.url);
      console.log(repeat() + 'Bugs: '
        + pkg.bugs.url);
      console.log(repeat() + 'License: '
        + pkg.licenses[0].type);
      console.log();
    }
    help.head = function() {
      console.log();
      console.log(repeat() + '%s %s - ' + this.description(),
        this.name(), this.version());
      console.log();
      console.log(repeat() + delimiter);
      console.log();
    }
    help.usage = function() {
      console.log(repeat() + 'Usage: ');
      console.log();
      usage.call(this);
    }
    help.call(this);
  })
  .on('empty',function(help, version) {
    // invoke our custom help logic
    // when zero arguments are present
    help.call(this);
  })
  .parse();
