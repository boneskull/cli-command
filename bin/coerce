#!/usr/bin/env node

/**
 *  Example of coercing argument values.
 *
 *  ./bin/coerce -i 10 -f 3.14 --range 1..10 --list=apples,oranges,pears
 */
var path = require('path');
require('ttycolor')().defaults();
var pkg = path.normalize(path.join(__dirname, '..', 'package.json'));
var cli = require('..')(pkg);

function range(val) {
  return val.split('..').map(Number);
}

function list(val) {
  return val.split(',');
}

cli
  //.usage('[options] <file ...>')
  .option('-i, --integer <n>', 'an integer argument', parseInt)
  .option('-f, --float <n>', 'a float argument', parseFloat)
  .option('-r, --range <a>..<b>', 'a range', range)
  .option('-l, --list <items>', 'a list', list)
  .option('-o, --optional [value]', 'an optional value')
  .version()
  .help()
  .parse();

var keys = [], z, i, key;
for(z in cli._arguments) {
  if(z == 'help' || z == 'version') continue;
  keys.push(z);
}
for(i = 0;i < keys.length;i++) {
  key = keys[i];
  if(cli[key] !== undefined) {
    console.log('%s: %s (%s)', key, cli[key], typeof(cli[key]));
  }
}

//console.log('int: %j', cli.integer);
//console.log(' float: %j', cli.float);
//console.log(' optional: %j', cli.optional);
//cli.range = cli.range || [];
//console.log(' range: %j..%j', cli.range[0], cli.range[1]);
//console.log(' list: %j', cli.list);
//console.log(' args: %j', cli.args);
